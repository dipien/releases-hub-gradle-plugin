version = '2.0.1'

ext.GITHUB_REPOSITORY_NAME = "releases-hub-gradle-plugin"

apply plugin: "com.dipien.component.builder"
apply plugin: "com.jdroidtools.root"
apply plugin: "com.dipien.release"

buildscript {
	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		jcenter()
		google()
		String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
					content {
						includeGroup("com.jdroidtools")
						includeGroup("com.dipien")
					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
				includeGroup("com.dipien")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath(BuildLibs.DIPIEN_COMPONENT_BUILDER)
		classpath(BuildLibs.JDROID_GRADLE_ROOT_PLUGIN)
		classpath(BuildLibs.RELEASE_GRADLE_PLUGIN)
	}
}

allprojects {
	buildscript {
		repositories {
			jcenter {
				mavenContent {
					releasesOnly()
				}
			}
			jcenter()
			google()
			String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
			boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
			if (isLocalMavenRepoEnabled) {
				String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
				if (localMavenRepo != null) {
					maven {
						url = localMavenRepo
						content {
							includeGroup("com.jdroidtools")
							includeGroup("com.dipien")
						}
					}
				}
			}
			maven {
				url = "https://oss.sonatype.org/content/repositories/snapshots/"
			}
			mavenCentral()
			gradlePluginPortal()
		}
	}

	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		jcenter()
		google()
		String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
					content {
						includeGroup("com.jdroidtools")
						includeGroup("com.dipien")
					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
				includeGroup("com.dipien")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
		mavenCentral()
		gradlePluginPortal()
	}
}

